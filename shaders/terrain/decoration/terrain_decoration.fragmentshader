uniform v3 WorldspaceBasis;
uniform v3 ChunkResolution;

uniform sampler2D InputTex;
uniform sampler2D DerivsTex;

in vec2 UV;
out v4 Output;


void main()
{
  f32 x = floor(gl_FragCoord.x);
  f32 z = floor(gl_FragCoord.y / 66);
  f32 y = floor(gl_FragCoord.y - (z*66));

  /* v3 Offset = V3(-1, -1, -1); */
  v3 Offset = V3(0);
  v3 Basis = Offset + WorldspaceBasis + (v3(x,y,z)*ChunkResolution);

  v4 TexLookup = texelFetch(InputTex,  ivec2(gl_FragCoord.xy), 0);
  v3 Derivs    = texelFetch(DerivsTex, ivec2(gl_FragCoord.xy), 0).xyz;
  /* v3 Derivs = texelFetch(DerivsTex, ivec2(gl_FragCoord.xy+ivec2(1,66)), 0).xyz; */

  // NOTE(Jesse): Set these in the -- user code -- section
  vec3 ColorValue = TexLookup.rgb;
  f32 NoiseValue = TexLookup.a;

  //
  // -- user code --
  //

  {

    // Put random junk here

    f32 White = Clamp01(1.5f+white_noise(Basis));

    v3 Green = V3(0.1f, 0.7f, 0.1f)*White;
    /* ColorValue = V3(White); */

    f32 CosTheta = Dot(Derivs, Normalize(V3(0,-1,-1)));
    ColorValue = Green*CosTheta;


    /* ColorValue = Derivs; */
    ColorValue = abs(Derivs);
    /* ColorValue = NoiseValue/V3(5000.f); */
  }

  //
  // -- end user code --
  //

  Output.rgb = ColorValue;
  Output.a = NoiseValue;

  /* uint SolidBit = NoiseValue > 0.f ? 1u : 0u; */
  /* uint PackedColor = PackRGB(ColorValue); */
  /* /1* uint PackedColor = 3543u; *1/ */

  /* Output = (SolidBit << 15) | PackedColor; */
}
